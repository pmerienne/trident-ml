<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.pmerienne</groupId>
	<artifactId>trident-ml</artifactId>
	<version>0.0.5-SNAPSHOT</version>
	<name>${project.artifactId}</name>
	<description>Trident-ML : A realtime online machine learning library</description>

	<licenses>
		<license>
			<name>Apache 2</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<url>https://github.com/pmerienne/trident-ml</url>

	<developers>
		<developer>
			<id>pmerienne</id>
			<email>pmerienne@excilys.com</email>
			<name>Pierre Merienne</name>
		</developer>
	</developers>

	<properties>
		<!-- Compiler properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>

		<!-- Version dependencies -->
		<storm.version>0.9.0.1</storm.version>
		<jblas.version>1.2.3</jblas.version>
		<lucene.version>3.6.2</lucene.version>

		<junit.version>4.7</junit.version>
		<mockito.version>1.9.0</mockito.version>
		<assertj.version>1.5.0</assertj.version>
	</properties>

	<repositories>
		<!-- For storm -->
		<repository>
			<id>clojars.org</id>
			<url>https://clojars.org/repo</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.1</version><!--$NO-MVN-MAN-VER$ -->
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.source}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.10.b1</version>
				<configuration>
					<header>etc/header.txt</header>
					<strictCheck>true</strictCheck>
					<includes>
						<include>src/main/java/**</include>
						<include>src/test/java/**</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<scm>
		<connection>scm:git:git@github.com:pmerienne/trident-ml.git</connection>
		<developerConnection>scm:git:git@github.com:pmerienne/trident-ml.git</developerConnection>
		<url>scm:git:git@github.com:pmerienne/trident-ml.git</url>
	</scm>

	<dependencies>
		<dependency>
			<groupId>storm</groupId>
			<artifactId>storm</artifactId>
			<version>${storm.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Matrix manipulation -->
		<dependency>
			<groupId>org.jblas</groupId>
			<artifactId>jblas</artifactId>
			<version>${jblas.version}</version>
		</dependency>

		<!-- Text pre-processing -->
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-analyzers</artifactId>
			<version>${lucene.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.12</version>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>sonatype-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<configuration>
							<arguments>-Dgpg.passphrase=${gpg.passphrase}</arguments>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.4</version>
						<configuration>
							<passphrase>${gpg.passphrase}</passphrase>
						</configuration>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

			<distributionManagement>
				<snapshotRepository>
					<id>sonatype-nexus-snapshots</id>
					<name>Sonatype Nexus snapshot repository</name>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
				<repository>
					<id>sonatype-nexus-staging</id>
					<name>Sonatype Nexus release repository</name>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>clojars-release</id>

			<distributionManagement>
				<repository>
					<id>clojars</id>
					<name>Clojars repository</name>
					<url>https://clojars.org/repo</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>github-release</id>

			<properties>
				<!--Trick to deploy releases (using mvn release:perform) to the local 
					file system. The release is actually performed from target/checkout, which 
					is why we need those ../../ . Notice that after deployment, you should commit 
					and push to the git repository. -->
				<altDeploymentRepository>release-repo::default::file:../../releases</altDeploymentRepository>
			</properties>

			<distributionManagement>
				<repository>
					<id>release-repo</id>
					<url>https://pmerienne@github.com/pmerienne/trident-ml/raw/master/releases</url>
				</repository>
				<snapshotRepository>
					<id>snapshot-repo</id>
					<url>https://pmerienne@github.com/pmerienne/trident-ml/raw/master/snapshots</url>
				</snapshotRepository>
			</distributionManagement>
		</profile>
	</profiles>
</project>